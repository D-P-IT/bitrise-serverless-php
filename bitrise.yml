---
format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
app:
  envs:
  - DOCKERHUB_IMG_ID: bitriseio/docker-bitrise-base
  # define in .bitrise.secrets.yml
  - DOCKER_LOGIN_EMAIL: $DOCKER_LOGIN_EMAIL
  - DOCKER_LOGIN_USER: $DOCKER_LOGIN_USER
  - DOCKER_LOGIN_PASS: $DOCKER_LOGIN_PASS
  # on CI
  - SLACK_WEBHOOK_URL: $SLACK_WEBHOOK_URL
  - SLACK_CHANNEL: $SLACK_CHANNEL
workflows:
  rebuild:
    steps:
    - script@1.1.0:
        title: docker infos & images
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            docker images
            df -kh ./
            docker info
    - script@1.1.0:
        title: docker build
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            docker build --pull --no-cache -t "${DOCKERHUB_IMG_ID}:latest" .

            docker images
    - script@1.1.0:
        title: run platform_report.sh
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            docker run --rm -v "$(pwd)/system_report.sh:/bitrise/src/system_report.sh" -v "/var/run/docker.sock:/var/run/docker.sock" "${DOCKERHUB_IMG_ID}:latest" bash /bitrise/src/system_report.sh

  deploy:
    before_run:
    - rebuild
    steps:
    - slack@2.1.0:
        run_if: .IsCI
        inputs:
        - webhook_url: $SLACK_WEBHOOK_URL
        - channel: $SLACK_CHANNEL
        - from_username: "$BITRISE_APP_TITLE - OK"
        - from_username_on_error: "$BITRISE_APP_TITLE - ERROR"
        - message: |-
            Started:
            
            - Build URL: $BITRISE_BUILD_URL
            - Build Number: $BITRISE_BUILD_NUMBER
    - script@1.1.0:
        title: docker login
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            echo "=> Docker login..."
            docker login -e "${DOCKER_LOGIN_EMAIL}" -u "${DOCKER_LOGIN_USER}" -p "${DOCKER_LOGIN_PASS}"
    - script@1.1.0:
        title: docker push
        inputs:
        - content: |-
            #!/bin/bash

            function docker_push_with_retry {
              local push_id="$1"
              echo " => Pushing: ${push_id} ..."
              docker push "${push_id}"
              if [ $? -ne 0 ] ; then
                echo " (!) WARNING: First push attempt failed - retry..."
                sleep 10
                docker push "${push_id}"
                if [ $? -ne 0 ] ; then
                  echo " [!] ERROR: Second push attempt failed"
                  exit 1
                fi
              fi
              echo " => Pushing - OK"
            }

            if [ ! -z "${BITRISE_GIT_TAG}" ] ; then
              echo " => Tagging: ${BITRISE_GIT_TAG} ..."
              docker tag -f "${DOCKERHUB_IMG_ID}:latest" "${DOCKERHUB_IMG_ID}:${BITRISE_GIT_TAG}"
              if [ $? -ne 0 ] ; then
                echo " [!] ERROR: failed to tag the image"
                exit 1
              fi
              docker_push_with_retry "${DOCKERHUB_IMG_ID}:${BITRISE_GIT_TAG}"
            fi

            docker_push_with_retry "${DOCKERHUB_IMG_ID}:latest"
    - slack@2.1.0:
        run_if: .IsCI
        inputs:
        - webhook_url: $SLACK_WEBHOOK_URL
        - channel: $SLACK_CHANNEL
        - from_username: "$BITRISE_APP_TITLE - OK"
        - from_username_on_error: "$BITRISE_APP_TITLE - ERROR"
        - message: |-
            Finished:
            
            - Branch: *$BITRISE_GIT_BRANCH*
            - Build URL: $BITRISE_BUILD_URL
            - Build Number: $BITRISE_BUILD_NUMBER
            - Build Message: $BITRISE_GIT_MESSAGE
